# –∏–º–ø–æ—Ä–∏—Ç—É—Ä–µ–º –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –∏ –º–æ–¥—É–ª–∏
import yfinance as yf
import streamlit as st
import pandas as pd

# –∑–∞–¥–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –∏–∫–æ–Ω–∫—É –∏ —Ç–µ–∫—Ç–æ–≤–æ–µ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏–µ
st.set_page_config(page_title='–ö–æ—Ç–∏—Ä–æ–≤–∫–∏ Apple', page_icon='üçè')
st.title(
    '–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ—Ç–∏—Ä–æ–≤–æ–∫ –∫–æ–º–ø–∞–Ω–∏–∏ Apple'
    )
st.write('### –ó–Ω–∞—á–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –∑–∞ –∑–∞–¥–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –≤—Ä–µ–º–µ–Ω–∏ —Å –¥–∏—Å–∫—Ä–µ—Ç–Ω–æ—Å—Ç—å—é 1 –¥–µ–Ω—å')

# –∑–∞–¥–∞–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É, —Ç–∞–∫ –∫–∞–∫ –ø–æ —É—Å–ª–æ–≤–∏—é –∑–∞–¥–∞–Ω–∏—è, –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç —Ç–æ–ª—å–∫–æ –∫–æ—Ç–∏—Ä–æ–≤–∫–∏ APPLE
TICKER_SYMBOL = 'AAPL'

# –∑–∞–¥–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –¥–∞—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, —Å–∫–∞–∂–µ–º, –∑–∞ 10–ª–µ—Ç–Ω–∏–π –ø–µ—Ä–∏–æ–¥
default_start_date = pd.to_datetime('2014-1-1')
default_end_date = pd.to_datetime('2024-1-1')

# —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ yfinance
# –ø–æ–ø—Ä–æ–±–æ–≤–∞–ª –∫–µ—à–∏—Ä–æ–≤–∞—Ç—å, –ø–æ –¢–ó –∫ –¥–æ–º–∞—à–∫–µ –Ω—É –∏ –ø–æ –ª–æ–≥–∏–∫–µ, —á—Ç–æ–±—ã –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –Ω–µ
# —Ç—è–Ω—É—Ç—å —Ñ–∞–π–ª—ã –æ—Ç—Ç—É–¥–∞ (–Ω–µ —É–≤–µ—Ä–µ–Ω, —á—Ç–æ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç—É—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∏ –Ω—É–∂–Ω–æ)
@st.cache_data
def load_data(ticker_symbol, start_date, end_date):
    ticker_data = yf.Ticker(TICKER_SYMBOL)
    return ticker_data.history(period='1d', start=start_date, end=end_date)

# –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –¥–∞—Ç (—Å –∑–∞—Ä–∞–Ω–µ–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
start_date = st.date_input(
    label='–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 2014-01-01):',
    value=default_start_date
    )
end_date = st.date_input(
    label='–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 2024-01-01):',
    value=default_end_date
    )

# –∫–Ω–æ–ø–∫–∞, –Ω–∞–∂–∞—Ç–∏–µ –∫–æ—Ç–æ—Ä–æ–π –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –¥–ª—è –ø–µ—Ä–µ—Å—á–µ—Ç–∞ –∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –¥–∞—Ç
button = st.button(label='–ü–µ—Ä–µ—á–∏—Ç–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è')

# –ª–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã, –µ—Å–ª–∏ –±—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞
if button:
    ticker_df = load_data(TICKER_SYMBOL, start_date, end_date)
# –µ—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –Ω–µ –±—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞, —Ç–æ —Å—á–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
else:
    ticker_df = load_data(TICKER_SYMBOL, default_start_date, default_end_date)

# —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
# –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ —Ä–µ–∞–ª–∏–∑—É–µ—Ç—Å—è –¥–æ–ø. –∑–∞–¥–∞–Ω–∏–µ –∫ –¥–æ–º–∞—à–∫–µ –ø—Ä–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
# –≥—Ä–∞—Ñ–∏–∫–æ–≤, –æ—Ç–ª–∏—á–Ω—ã—Ö –æ—Ç st.pyplot()
def visualize_metric(metric: str, label: str) -> None:
    st.write(f'## {label}')
    st.line_chart(data=ticker_df[metric])

# –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –∏–∑ –º–µ—Ç—Ä–∏–∫
visualize_metric('Open', '–¶–µ–Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è (Open Price)')
visualize_metric('Close', '–¶–µ–Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏—è (Closing Price)')
visualize_metric('Volume', '–û–±—ä–µ–º –ø—Ä–æ–¥–∞–∂ (Volume)')
visualize_metric('High', '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ (High Price)')
visualize_metric('Low', '–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ (Low Price)')
